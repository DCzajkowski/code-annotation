workspace:
  base: /go
  path: src/github.com/src-d/code-annotation

branches: [master, staging, release/*]

# ANCHORS

build: &build
  image: golang:1.9-alpine3.7
  commands:
    - apk --update upgrade
    - apk add --no-cache
        bash make curl git
        ca-certificates build-base
        libxml2-dev protobuf
        yarn
    - make build-app
  debug: true

docker_image: &docker_image
  group: docker
  image: plugins/docker
  registry: docker.io
  repo: srcd/code-annotation
  secrets: [ docker_username, docker_password ]
  dockerfile: Dockerfile
  debug: true

# PIPELINE STEPS

pipeline:

  clone:
    image: plugins/git
    debug: true


  # deployment to staging environment

  build_stg:
    <<: *build
    when:
      branch: [staging]
      event: [push]

  docker_image_stg:
    <<: *docker_image
    # workaround for bug https://github.com/kubernetes/helm/issues/1707
    tag: 'commit-${DRONE_COMMIT_SHA:0:7}'
    when:
      branch: [staging]
      event: [push]

  helm_deploy_stg:
    image: quay.io/ipedrazas/drone-helm
    skip_tls_verify: true
    chart: ./helm-charts/code-annotation
    release: code-annotation
    prefix: STG
    secrets: [ STG_API_SERVER, STG_KUBERNETES_TOKEN ]
    values: ingress.globalStaticIpName=code-annotation-staging,ingress.hostname=code-annotation-staging.srcd.run,image.tag=commit-${DRONE_COMMIT_SHA:0:7},secretName=code-annotation-drone-workaround
    tiller_ns: kube-system
    wait: true
    when:
      branch: [staging]
      event: [push]

  # push build artifacts to GitHub release

  build_release:
    <<: *build
    when:
      event: [tag]

  docker_image_release:
    <<: *docker_image
    tags:
      - '${DRONE_TAG}'
      - 'latest'
    when:
      event: [tag]

  github_binary_release:
    image: plugins/github-release
    secrets: [ github_token ]
    files: build/*.tar.gz
    when:
      event: [tag]
